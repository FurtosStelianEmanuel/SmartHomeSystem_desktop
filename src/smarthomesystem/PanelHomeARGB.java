/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smarthomesystem;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import smarthomesystem.SmartHomeSystem.ARGB;
import static smarthomesystem.SmartHomeSystem.getSmartHomeSystem;

/**
 *
 * @author Manel
 */
public class PanelHomeARGB extends SHSPanel {

    /**
     * Creates new form PanelHomeARGB
     */
    public PanelHomeARGB() {
        //<editor-fold desc="Constructor body" defaultstate="collapsed">
        initComponents();
        colorWheelPanel1.setBrightnessSlider(colorSliderPanel1);
        roundButton1.setIcon(SmartHomeSystem.resize("lightOnAnimationsIcon.png", 55, 55));
        roundButton2.setIcon(SmartHomeSystem.resize("lightOffAnimationsIcon.png", 55, 55));
        roundButton3.setIcon(SmartHomeSystem.resize("icon_aprindeLumina.png", 55, 55));
        colorWheelPanel1.setMainFormListener(new MainFormActionListener() {
            @Override
            public void onColorMove(Color c) {
                getSmartHomeSystem().send(ARGB.COMMAND_SET_COLOR, c);
            }
        });

        colorSliderPanel1.slider.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                getSmartHomeSystem().send(ARGB.COMMAND_SET_COLOR, colorWheelPanel1.getColor());
            }
        });

        colorWheelPanel1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                getSmartHomeSystem().send(ARGB.COMMAND_SET_COLOR, colorWheelPanel1.getColor());
            }
        });
        //</editor-fold>
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        colorWheelPanel1 = new smarthomesystem.ColorWheelPanel();
        colorSliderPanel1 = new smarthomesystem.ColorSliderPanel();
        jLabel1 = new javax.swing.JLabel();
        roundButton1 = new smarthomesystem.RoundButton();
        roundButton2 = new smarthomesystem.RoundButton();
        roundButton3 = new smarthomesystem.RoundButton();

        setPreferredSize(new java.awt.Dimension(500, 454));

        javax.swing.GroupLayout colorWheelPanel1Layout = new javax.swing.GroupLayout(colorWheelPanel1);
        colorWheelPanel1.setLayout(colorWheelPanel1Layout);
        colorWheelPanel1Layout.setHorizontalGroup(
            colorWheelPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        colorWheelPanel1Layout.setVerticalGroup(
            colorWheelPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ARGB-Strip");

        roundButton1.setText("roundButton1");
        roundButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton1ActionPerformed(evt);
            }
        });

        roundButton2.setText("roundButton1");
        roundButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton2ActionPerformed(evt);
            }
        });

        roundButton3.setText("roundButton1");
        roundButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(colorSliderPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(roundButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roundButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(colorWheelPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(roundButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roundButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roundButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(colorWheelPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roundButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorSliderPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roundButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton1ActionPerformed
        getSmartHomeSystem().send(ARGB.COMMAND_TURN_ON);
    }//GEN-LAST:event_roundButton1ActionPerformed

    private void roundButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton2ActionPerformed
        getSmartHomeSystem().send(ARGB.COMMAND_TURN_OFF);
    }//GEN-LAST:event_roundButton2ActionPerformed

    private void roundButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton3ActionPerformed
        getSmartHomeSystem().send(ARGB.COMMAND_TURN_ON_WHITE);
    }//GEN-LAST:event_roundButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public smarthomesystem.ColorSliderPanel colorSliderPanel1;
    public smarthomesystem.ColorWheelPanel colorWheelPanel1;
    private javax.swing.JLabel jLabel1;
    private smarthomesystem.RoundButton roundButton1;
    private smarthomesystem.RoundButton roundButton2;
    private smarthomesystem.RoundButton roundButton3;
    // End of variables declaration//GEN-END:variables
}
