/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smarthomesystem;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import jssc.SerialPortException;
import static smarthomesystem.SmartHomeSystem.getSmartHomeSystem;

/**
 *
 * @author Manel
 */
public class ConnectUSBForm extends javax.swing.JFrame {

    /**
     * Creates new form ConnectUSBForm
     */
    public ConnectUSBForm() {
        initComponents();
        setLocationRelativeTo(null);
    }

    @Override
    public void setVisible(boolean state) {
        super.setVisible(state);
        if (state) {
            DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox1.getModel();
            for (String comPort : Arduino.getAllCOMPorts()) {
                if (model.getIndexOf(comPort) == -1) {
                    model.addElement(comPort);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Conectare");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Selectează port-ul COM la care este conectat Arduino");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextArea1.setRows(2);
        jTextArea1.setText("Dacă ai și modul bluetooth, deconectează TX-ul acestuia,\naltfel el va bloca comunicarea prin USB");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public synchronized boolean smartHomeSystemConnected() {
        return getSmartHomeSystem().getArduino().readFirstLine;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Arduino arduinoRef;
        arduinoRef = new Arduino(jComboBox1.getSelectedItem().toString());
        arduinoRef.connect(new Arduino.ConnectionEventCallback() {
            @Override
            public void connectionLost() {
                getSmartHomeSystem().connectionLost(Arduino.class);
            }

            @Override
            public void connectionEstablished() {

                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            Thread.sleep(2000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(ConnectUSBForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        new Thread(new Runnable() {
                            @Override
                            public void run() {
                                try {
                                    Thread.sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(ConnectUSBForm.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                if (smartHomeSystemConnected()) {
                                    dispose();
                                    getSmartHomeSystem().connectionEstablished(Arduino.class);
                                } else {
                                    try {
                                        arduinoRef.close();
                                    } catch (SerialPortException ex) {
                                        Logger.getLogger(ConnectUSBForm.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    JOptionPane.showMessageDialog(null, "Ne am putut conecta la un port COM dar nu am primit confirmarea shs, conexiune esuata");
                                }
                            }

                        }).start();
                        for (int i = 0; i < 5 && !smartHomeSystemConnected(); i++) {
                            arduinoRef.write(new byte[]{'A', '0', '\r'});
                            try {
                                Thread.sleep(150);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(ConnectUSBForm.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }
                }).start();
            }

            @Override
            public void connectionFailed() {
                JOptionPane.showMessageDialog(null, "Conectarea cu Arduino a esuat");
                getSmartHomeSystem().connectionLost(Arduino.class);
            }
        });
        getSmartHomeSystem().setArduino(arduinoRef);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    public javax.swing.JComboBox<String> jComboBox1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
